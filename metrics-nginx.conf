events {
    worker_connections 1024;
}

http {
    # Define upstream for metrics aggregation
    upstream service_a_metrics {
        server service-a-1:9091;
        server service-a-2:9091;
        server service-a-3:9091;
    }

    # Metrics aggregation server
    server {
        listen 80;
        server_name localhost;

        # Health check for the aggregator
        location /health {
            return 200 "metrics-aggregator is healthy\n";
            add_header Content-Type text/plain;
        }

        # Aggregated metrics endpoint
        location /metrics {
            proxy_pass http://service_a_metrics/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Add custom headers to identify the source
            add_header X-Metrics-Aggregator "true";
            add_header X-Upstream-Server $upstream_addr;
        }

        # Individual service metrics endpoints
        location /metrics/service-a-1 {
            proxy_pass http://service-a-1:9091/metrics;
            proxy_set_header Host $host;
            add_header X-Service-Instance "service-a-1";
        }

        location /metrics/service-a-2 {
            proxy_pass http://service-a-2:9091/metrics;
            proxy_set_header Host $host;
            add_header X-Service-Instance "service-a-2";
        }

        location /metrics/service-a-3 {
            proxy_pass http://service-a-3:9091/metrics;
            proxy_set_header Host $host;
            add_header X-Service-Instance "service-a-3";
        }

        # Status page showing all services
        location /status {
            return 200 '{"aggregator":"healthy","services":{"service-a-1":"check /metrics/service-a-1","service-a-2":"check /metrics/service-a-2","service-a-3":"check /metrics/service-a-3"},"endpoints":["/metrics","/metrics/service-a-1","/metrics/service-a-2","/metrics/service-a-3"]}';
            add_header Content-Type application/json;
        }
    }

    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
}
